name: Publish Package to npmjs
on:
  push:
    branches:
      - main
jobs:
  deploy-global:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::340502884936:role/InsideoutGithubActions
          aws-region: ap-southeast-2
      - uses: actions/checkout@v3
      - run: |
          cd infra/environment
          terraform init
          terraform apply -auto-approve -var-file ./prod.tfvars
        name: Deploy

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
          java-package: jre
      - run: pnpm i --frozen-lockfile
      - run: pnpm --filter='!./services/admin/ui' build
        name: Build
      - run: pnpm test
        name: Test
      - run: pnpm gen-avro
        name: Generate Avro
      - name: Upload service artifacts
        uses: actions/upload-artifact@v2
        with:
          name: src
          path: |
            services/*/*/dist
            services/*/*/infra
            services/*/*/avro
            infra/modules/*

  deploy-catalog-service:
    needs: [build, deploy-global]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: src
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::340502884936:role/InsideoutGithubActions
          aws-region: ap-southeast-2
      - run: |
          cd services/catalog/catalog-service/infra
          terraform init
          terraform apply -auto-approve -var-file ./prod.tfvars
        name: Deploy

  catalog-service-acceptance-test:
    needs: [deploy-catalog-service]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::340502884936:role/InsideoutGithubActions
          aws-region: ap-southeast-2
      - run: pnpm i --frozen-lockfile
      - run: pnpm build
        name: Build
      - run: pnpm test:int
        name: Test

  admin-ui-deploy:
    needs: [deploy-catalog-service]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/admin/ui
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::340502884936:role/InsideoutGithubActions
          aws-region: ap-southeast-2
      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2
      - run: |
          cd infra
          terraform init
          terraform apply -auto-approve -var-file ./prod.tfvars
          export TF_OUTPUT=$(terraform output -json)
        name: Deploy Infra
      - run: |
          export VITE_IDENTITY_POOL_ID=$(echo $TF_OUTPUT | jq -r '.identity_pool_id.value')
          export VITE_USER_POOL_ID=$(echo $TF_OUTPUT | jq -r '.user_pool_id.value')
          export VITE_ADMIN_IAM_ROLE=$(echo $TF_OUTPUT | jq -r '.api_role_arn.value')
          export VITE_CATALOG_API_ROOT=$(echo $TF_OUTPUT | jq -r '.catalog_api_url.value')
          pnpm install && pnpm build
      - run: cd dist && aws s3 sync ./ s3://inside-out-commerce-prod-catalog-service-origin
        name: Deploy site